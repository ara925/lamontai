name: LamontAI CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install Frontend Dependencies
      run: npm ci
      
    - name: Install Backend Dependencies
      run: cd backend && npm ci
      
    - name: Lint Frontend
      run: npm run lint
      
    - name: Lint Backend
      run: cd backend && npm run lint || echo "Linting skipped - no lint command configured"

  build:
    name: Build Application
    needs: lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install Frontend Dependencies
      run: npm ci
      
    - name: Build Frontend
      run: npm run prepare:prod
      
    - name: Install Backend Dependencies
      run: cd backend && npm ci
      
    - name: Build Backend
      run: cd backend && npm run build
      
    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          .next/
          backend/dist/
          
  deploy:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
    
    # Here you would add steps to deploy to your hosting provider
    # This is an example that would work with services like Vercel, Netlify, etc.
    
    - name: Deploy to Hosting
      run: |
        echo "Deploying application to production..."
        # Add your deployment commands here
        # For example:
        # - npm install -g vercel
        # - vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
      
    - name: Notify Deployment Status
      run: |
        echo "Deployment completed successfully!" 